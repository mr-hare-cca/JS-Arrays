# classroom.yml
# Config file for Unit 8.5 – Arrays (Inputs + textContent)
# This harness assumes your page updates ONLY via textContent (no alerts/prompts/innerHTML).

# Function the harness calls on each test run
run: runJS()

# Global guardrails (aligned to the README)
noAlert: true
noPrompt: true
# noConsole: true   # Uncomment if you want to forbid console.log for this assignment

# Notes for students (self-documenting tests)
# - Valid colors (case/space-insensitive): "green" => "Go", "yellow" => "Slow", "red" => "Stop"
# - Exactly 5 actions should render as list items under #actionList (use <li> recommended)
# - Average should be a plain numeric string (e.g., "3" or "8.8")
# - #feedback must be empty on valid colors; show a message for invalid colors
# - Count evens using standard math rules (0 is even)

tests:

  # ────────────────────────────────────────────────────────────
  # Sanity + GREEN flow
  # ────────────────────────────────────────────────────────────
  - name: "GREEN: 'green' + (1,2,3,4,5) → five 'Go', avg=3, evens=2"
    inputs:
      "#color": "green"
      "#n1": 1
      "#n2": 2
      "#n3": 3
      "#n4": 4
      "#n5": 5
    outputs:
      # Exactly 5 actions and all are "Go"
      count: { selector: "#actionList li", text: "Go", value: 5 }
      matches:
        # Also verify the list length is exactly 5 regardless of text
        - { selector: "#actionList li:nth-child(5)", text: "Go" }
        # Average: (1+2+3+4+5)/5 = 3
        - { selector: "#average", text: "3" }
        # Evens: (2,4) = 2
        - { selector: "#evenCount", text: "2" }
        # No feedback for valid color
        - { selector: "#feedback", text: "" }

  # ────────────────────────────────────────────────────────────
  # RED in uppercase (case-insensitivity) + all even numbers
  # ────────────────────────────────────────────────────────────
  - name: "RED: 'RED' (case-insensitive), all even → five 'Stop', avg=8.8, evens=5"
    inputs:
      "#color": "RED"  # case-insensitivity required
      "#n1": 10
      "#n2": 20
      "#n3": 2
      "#n4": 4
      "#n5": 8
    outputs:
      count: { selector: "#actionList li", text: "Stop", value: 5 }
      matches:
        # Average: (10+20+2+4+8)/5 = 44/5 = 8.8
        - { selector: "#average", text: "8.8" }
        # Evens: all five
        - { selector: "#evenCount", text: "5" }
        # No feedback for valid color
        - { selector: "#feedback", text: "" }

  # ────────────────────────────────────────────────────────────
  # YELLOW flow, includes zero (0 is even)
  # ────────────────────────────────────────────────────────────
  - name: "YELLOW: 'Yellow' + (1,3,5,7,0) → five 'Slow', avg=3.2, evens=1"
    inputs:
      "#color": "Yellow"
      "#n1": 1
      "#n2": 3
      "#n3": 5
      "#n4": 7
      "#n5": 0  # 0 is even
    outputs:
      count: { selector: "#actionList li", text: "Slow", value: 5 }
      matches:
        # Average: (1+3+5+7+0)/5 = 16/5 = 3.2
        - { selector: "#average", text: "3.2" }
        # Evens: (0) only
        - { selector: "#evenCount", text: "1" }
        - { selector: "#feedback", text: "" }

  # ────────────────────────────────────────────────────────────
  # Invalid color path: must NOT render actions; still compute numbers
  # ────────────────────────────────────────────────────────────
  - name: "INVALID: 'blue' → no actions; feedback shown; average/evens still computed"
    inputs:
      "#color": "blue"
      "#n1": 1
      "#n2": 1
      "#n3": 1
      "#n4": 1
      "#n5": 1
    outputs:
      # No actions for invalid color
      count: { selector: "#actionList li", value: 0 }
      # Some message must appear (any non-empty text)
      not: { selector: "#feedback", text: "" }
      matches:
        # Average still calculated: 1
        - { selector: "#average", text: "1" }
        # Evens among five 1s: 0
        - { selector: "#evenCount", text: "0" }

  # ────────────────────────────────────────────────────────────
  # Whitespace + case robustness; list must reset between runs
  # (Use inputs that produce an integer average to avoid formatting ambiguity.)
  # ────────────────────────────────────────────────────────────
  - name: "ROBUSTNESS: '  YeLLoW  ' (spaces/mixed case) resets list; avg=10; evens=3"
    inputs:
      "#color": "  YeLLoW  "   # should trim + normalize
      "#n1": 10
      "#n2": 10
      "#n3": 10
      "#n4": 10
      "#n5": 10
    outputs:
      # Must be exactly 5 fresh items, all 'Slow'
      count: { selector: "#actionList li", text: "Slow", value: 5 }
      matches:
        # Average: 10
        - { selector: "#average", text: "10" }
        # Evens: 5 numbers are even → 5 (keep requirement at 3? If you require 3, change inputs)
        - { selector: "#evenCount", text: "5" }
        - { selector: "#feedback", text: "" }

  # ────────────────────────────────────────────────────────────
  # Mixed signs and odd/even combo including negatives
  # Ensures evenness uses %2 === 0 logic, not string tricks.
  # ────────────────────────────────────────────────────────────
  - name: "MIXED NUMBERS: 'Green' + (-2,-1,0,1,2) → five 'Go', avg=0, evens=3"
    inputs:
      "#color": "Green"
      "#n1": -2
      "#n2": -1
      "#n3": 0
      "#n4": 1
      "#n5": 2
    outputs:
      count: { selector: "#actionList li", text: "Go", value: 5 }
      matches:
        # Average: (-2 + -1 + 0 + 1 + 2) / 5 = 0
        - { selector: "#average", text: "0" }
        # Evens: -2, 0, 2 → 3
        - { selector: "#evenCount", text: "3" }
        - { selector: "#feedback", text: "" }
